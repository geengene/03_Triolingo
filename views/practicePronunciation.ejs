<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles/practicePronunciation.css" />
    <title>Pronunciation</title>
  </head>
  <body>
    <div class="card">
      <h1 id="wordText"><%= words[currentIndex].text %></h1>
      <audio id="audiourl" controls>
        <!-- TODO: if no audiourl, use webspeech api , add card system-->
        <source src="<%= words[currentIndex].audiourl %>" type="audio/mpeg" />
      </audio>
      <h2 id="textHolder">[...]</h2>
      <h2><%= convertedInput %></h2>
      <h2><%= result %></h2>
      <!-- TODO: next button will add currentIndex -->
      <button hidden="<%= nextBtn %>">Next</button>

      <form id="inputForm" method="post" action="/pronunciation">
        <h2>Input:</h2>
        <input
          id="recordedInput"
          name="recordedInput"
          type="text"
          value=""
          readonly
        />
        <input
          type="text"
          name="wordsForm"
          id="wordsForm"
          value="<%= JSON.stringify(words) %>"
          hidden="true"
        />
        <input
          type="text"
          name="currentIndexForm"
          id="currentIndexForm"
          value="<%= currentIndex %>"
          hidden="true"
        />
        <input id="submitBtn" hidden="true" type="submit" />
      </form>
    </div>
    <div class="buttons">
      <button id="recordBtn">start recording</button>
    </div>
  </body>
  <script>
    const SpeechRecognition =
      window.SpeechRecognition || window.webkitSpeechRecognition;
    const SpeechRecognitionEvent =
      window.SpeechRecognitionEvent || window.webkitSpeechRecognitionEvent;
    let currentIndex = <%= currentIndex %>;
    const words = <%- JSON.stringify(words) %>;
    console.log("words:", words)
    const wordsArray = []
    words.forEach((word) => {
      wordsArray.push(word.text);
    });
    console.log("wordsArray:", wordsArray)

    const recognition = new SpeechRecognition();
    const SpeechGrammarList =
      window.SpeechGrammarList || window.webkitSpeechGrammarList;
    if (SpeechGrammarList) {
      const speechRecognitionList = new SpeechGrammarList();
      const grammar = '#JSGF V1.0; grammar wordsArray; public <word> = ' + wordsArray.join(' | ') + ' ;'
      speechRecognitionList.addFromString(grammar, 1);
      recognition.grammars = speechRecognitionList;
    }
    recognition.continuous = false;
    recognition.lang = 'ja-JP';
    recognition.interimResults = false;
    recognition.maxAlternatives = 0;

    document.getElementById("recordBtn").onclick = function() {
      recognition.start();
      console.log('Ready to receive a command.');
    }

    const recordedInput = document.getElementById("recordedInput")
    const submitBtn = document.getElementById("submitBtn")

    recognition.onresult = async function(event) {
      var input = event.results[0][0].transcript;
      recordedInput.value = input;
      console.log('Confidence: ' + event.results[0][0].confidence);
      document.getElementById("currentIndexForm").value = currentIndex
      submitBtn.click();
      }

    recognition.onspeechend = function() {
      recognition.stop();
    }
    recognition.onnomatch = function(event) {
      recordedInput.textContent = "I didn't recognise that word.";
    }
    recognition.onerror = function(event) {
      recordedInput.textContent = 'Error occurred in recognition: ' + event.error;
    }
  </script>
</html>
